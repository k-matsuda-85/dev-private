//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProRadWebViewer.ProRadService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class AnnotationItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontSize {
            get {
                return this.FontSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.FontSizeField, value) != true)) {
                    this.FontSizeField = value;
                    this.RaisePropertyChanged("FontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontStyle {
            get {
                return this.FontStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.FontStyleField, value) != true)) {
                    this.FontStyleField = value;
                    this.RaisePropertyChanged("FontStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MGroupItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class MGroupItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbActionType", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    public enum DbActionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insert = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MUserItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class MUserItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvalidFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockoutFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginPWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InvalidFlag {
            get {
                return this.InvalidFlagField;
            }
            set {
                if ((this.InvalidFlagField.Equals(value) != true)) {
                    this.InvalidFlagField = value;
                    this.RaisePropertyChanged("InvalidFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockoutFlag {
            get {
                return this.LockoutFlagField;
            }
            set {
                if ((this.LockoutFlagField.Equals(value) != true)) {
                    this.LockoutFlagField = value;
                    this.RaisePropertyChanged("LockoutFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginPW {
            get {
                return this.LoginPWField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginPWField, value) != true)) {
                    this.LoginPWField = value;
                    this.RaisePropertyChanged("LoginPW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MStorageItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class MStorageItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DicomPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogonPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogonUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DicomPath {
            get {
                return this.DicomPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DicomPathField, value) != true)) {
                    this.DicomPathField = value;
                    this.RaisePropertyChanged("DicomPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogonPassword {
            get {
                return this.LogonPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.LogonPasswordField, value) != true)) {
                    this.LogonPasswordField = value;
                    this.RaisePropertyChanged("LogonPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogonUsername {
            get {
                return this.LogonUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogonUsernameField, value) != true)) {
                    this.LogonUsernameField = value;
                    this.RaisePropertyChanged("LogonUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageID {
            get {
                return this.StorageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageIDField, value) != true)) {
                    this.StorageIDField = value;
                    this.RaisePropertyChanged("StorageID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RSKey", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class RSKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserCDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNoField, value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIDField, value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((this.SerialNoField.Equals(value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyDate {
            get {
                return this.StudyDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyDateField, value) != true)) {
                    this.StudyDateField = value;
                    this.RaisePropertyChanged("StudyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserCD {
            get {
                return this.UserCDField;
            }
            set {
                if ((this.UserCDField.Equals(value) != true)) {
                    this.UserCDField = value;
                    this.RaisePropertyChanged("UserCD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FindParam", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class FindParam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPacsSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyDateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyDateToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessionNumber {
            get {
                return this.AccessionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNumberField, value) != true)) {
                    this.AccessionNumberField = value;
                    this.RaisePropertyChanged("AccessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPacsSearch {
            get {
                return this.IsPacsSearchField;
            }
            set {
                if ((this.IsPacsSearchField.Equals(value) != true)) {
                    this.IsPacsSearchField = value;
                    this.RaisePropertyChanged("IsPacsSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIDField, value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyDateFrom {
            get {
                return this.StudyDateFromField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyDateFromField, value) != true)) {
                    this.StudyDateFromField = value;
                    this.RaisePropertyChanged("StudyDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyDateTo {
            get {
                return this.StudyDateToField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyDateToField, value) != true)) {
                    this.StudyDateToField = value;
                    this.RaisePropertyChanged("StudyDateTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyTag", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class StudyTag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyPartExaminedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientBirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientSexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudyMemoUmuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessionNumber {
            get {
                return this.AccessionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNumberField, value) != true)) {
                    this.AccessionNumberField = value;
                    this.RaisePropertyChanged("AccessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyPartExamined {
            get {
                return this.BodyPartExaminedField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyPartExaminedField, value) != true)) {
                    this.BodyPartExaminedField = value;
                    this.RaisePropertyChanged("BodyPartExamined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfImages {
            get {
                return this.NumberOfImagesField;
            }
            set {
                if ((this.NumberOfImagesField.Equals(value) != true)) {
                    this.NumberOfImagesField = value;
                    this.RaisePropertyChanged("NumberOfImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAge {
            get {
                return this.PatientAgeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAgeField, value) != true)) {
                    this.PatientAgeField = value;
                    this.RaisePropertyChanged("PatientAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientBirthDate {
            get {
                return this.PatientBirthDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientBirthDateField, value) != true)) {
                    this.PatientBirthDateField = value;
                    this.RaisePropertyChanged("PatientBirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIDField, value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientSex {
            get {
                return this.PatientSexField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientSexField, value) != true)) {
                    this.PatientSexField = value;
                    this.RaisePropertyChanged("PatientSex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyDate {
            get {
                return this.StudyDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyDateField, value) != true)) {
                    this.StudyDateField = value;
                    this.RaisePropertyChanged("StudyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyDescription {
            get {
                return this.StudyDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyDescriptionField, value) != true)) {
                    this.StudyDescriptionField = value;
                    this.RaisePropertyChanged("StudyDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyKey {
            get {
                return this.StudyKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyKeyField, value) != true)) {
                    this.StudyKeyField = value;
                    this.RaisePropertyChanged("StudyKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudyMemoUmu {
            get {
                return this.StudyMemoUmuField;
            }
            set {
                if ((this.StudyMemoUmuField.Equals(value) != true)) {
                    this.StudyMemoUmuField = value;
                    this.RaisePropertyChanged("StudyMemoUmu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyTime {
            get {
                return this.StudyTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyTimeField, value) != true)) {
                    this.StudyTimeField = value;
                    this.RaisePropertyChanged("StudyTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeriesTag", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class SeriesTag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ImageKeysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGSPSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfFramesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SeriesNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ImageKeys {
            get {
                return this.ImageKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageKeysField, value) != true)) {
                    this.ImageKeysField = value;
                    this.RaisePropertyChanged("ImageKeys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGSPS {
            get {
                return this.IsGSPSField;
            }
            set {
                if ((this.IsGSPSField.Equals(value) != true)) {
                    this.IsGSPSField = value;
                    this.RaisePropertyChanged("IsGSPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modality {
            get {
                return this.ModalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ModalityField, value) != true)) {
                    this.ModalityField = value;
                    this.RaisePropertyChanged("Modality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfFrames {
            get {
                return this.NumberOfFramesField;
            }
            set {
                if ((this.NumberOfFramesField.Equals(value) != true)) {
                    this.NumberOfFramesField = value;
                    this.RaisePropertyChanged("NumberOfFrames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfImages {
            get {
                return this.NumberOfImagesField;
            }
            set {
                if ((this.NumberOfImagesField.Equals(value) != true)) {
                    this.NumberOfImagesField = value;
                    this.RaisePropertyChanged("NumberOfImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesDescription {
            get {
                return this.SeriesDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesDescriptionField, value) != true)) {
                    this.SeriesDescriptionField = value;
                    this.RaisePropertyChanged("SeriesDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesKey {
            get {
                return this.SeriesKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesKeyField, value) != true)) {
                    this.SeriesKeyField = value;
                    this.RaisePropertyChanged("SeriesKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SeriesNumber {
            get {
                return this.SeriesNumberField;
            }
            set {
                if ((this.SeriesNumberField.Equals(value) != true)) {
                    this.SeriesNumberField = value;
                    this.RaisePropertyChanged("SeriesNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageTag", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class ImageTag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageOrientationPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePositionPatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstanceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsImageInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PixelSpacingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SliceLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SliceThicknessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowCenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindowWidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((this.ColumnsField.Equals(value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageKey {
            get {
                return this.ImageKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageKeyField, value) != true)) {
                    this.ImageKeyField = value;
                    this.RaisePropertyChanged("ImageKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageOrientationPatient {
            get {
                return this.ImageOrientationPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageOrientationPatientField, value) != true)) {
                    this.ImageOrientationPatientField = value;
                    this.RaisePropertyChanged("ImageOrientationPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePositionPatient {
            get {
                return this.ImagePositionPatientField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePositionPatientField, value) != true)) {
                    this.ImagePositionPatientField = value;
                    this.RaisePropertyChanged("ImagePositionPatient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstanceNumber {
            get {
                return this.InstanceNumberField;
            }
            set {
                if ((this.InstanceNumberField.Equals(value) != true)) {
                    this.InstanceNumberField = value;
                    this.RaisePropertyChanged("InstanceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsImageInfo {
            get {
                return this.IsImageInfoField;
            }
            set {
                if ((this.IsImageInfoField.Equals(value) != true)) {
                    this.IsImageInfoField = value;
                    this.RaisePropertyChanged("IsImageInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PixelSpacing {
            get {
                return this.PixelSpacingField;
            }
            set {
                if ((object.ReferenceEquals(this.PixelSpacingField, value) != true)) {
                    this.PixelSpacingField = value;
                    this.RaisePropertyChanged("PixelSpacing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SliceLocation {
            get {
                return this.SliceLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.SliceLocationField, value) != true)) {
                    this.SliceLocationField = value;
                    this.RaisePropertyChanged("SliceLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SliceThickness {
            get {
                return this.SliceThicknessField;
            }
            set {
                if ((object.ReferenceEquals(this.SliceThicknessField, value) != true)) {
                    this.SliceThicknessField = value;
                    this.RaisePropertyChanged("SliceThickness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowCenter {
            get {
                return this.WindowCenterField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowCenterField, value) != true)) {
                    this.WindowCenterField = value;
                    this.RaisePropertyChanged("WindowCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowWidth {
            get {
                return this.WindowWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowWidthField, value) != true)) {
                    this.WindowWidthField = value;
                    this.RaisePropertyChanged("WindowWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyMemoItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class StudyMemoItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MemoDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MemoDate {
            get {
                return this.MemoDateField;
            }
            set {
                if ((this.MemoDateField.Equals(value) != true)) {
                    this.MemoDateField = value;
                    this.RaisePropertyChanged("MemoDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DicomTagItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class DicomTagItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataSize {
            get {
                return this.DataSizeField;
            }
            set {
                if ((this.DataSizeField.Equals(value) != true)) {
                    this.DataSizeField = value;
                    this.RaisePropertyChanged("DataSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EName {
            get {
                return this.ENameField;
            }
            set {
                if ((object.ReferenceEquals(this.ENameField, value) != true)) {
                    this.ENameField = value;
                    this.RaisePropertyChanged("EName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JName {
            get {
                return this.JNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JNameField, value) != true)) {
                    this.JNameField = value;
                    this.RaisePropertyChanged("JName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Tag {
            get {
                return this.TagField;
            }
            set {
                if ((this.TagField.Equals(value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VR {
            get {
                return this.VRField;
            }
            set {
                if ((object.ReferenceEquals(this.VRField, value) != true)) {
                    this.VRField = value;
                    this.RaisePropertyChanged("VR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoiItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class RoiItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaximumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinimumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StandardDeviationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Average {
            get {
                return this.AverageField;
            }
            set {
                if ((this.AverageField.Equals(value) != true)) {
                    this.AverageField = value;
                    this.RaisePropertyChanged("Average");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Maximum {
            get {
                return this.MaximumField;
            }
            set {
                if ((this.MaximumField.Equals(value) != true)) {
                    this.MaximumField = value;
                    this.RaisePropertyChanged("Maximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Minimum {
            get {
                return this.MinimumField;
            }
            set {
                if ((this.MinimumField.Equals(value) != true)) {
                    this.MinimumField = value;
                    this.RaisePropertyChanged("Minimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StandardDeviation {
            get {
                return this.StandardDeviationField;
            }
            set {
                if ((this.StandardDeviationField.Equals(value) != true)) {
                    this.StandardDeviationField = value;
                    this.RaisePropertyChanged("StandardDeviation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GSPSItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class GSPSItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentCreatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GSPSKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentationCreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresentationCreationTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentCreatorName {
            get {
                return this.ContentCreatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentCreatorNameField, value) != true)) {
                    this.ContentCreatorNameField = value;
                    this.RaisePropertyChanged("ContentCreatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentDescription {
            get {
                return this.ContentDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentDescriptionField, value) != true)) {
                    this.ContentDescriptionField = value;
                    this.RaisePropertyChanged("ContentDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentLabel {
            get {
                return this.ContentLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentLabelField, value) != true)) {
                    this.ContentLabelField = value;
                    this.RaisePropertyChanged("ContentLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GSPSKey {
            get {
                return this.GSPSKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GSPSKeyField, value) != true)) {
                    this.GSPSKeyField = value;
                    this.RaisePropertyChanged("GSPSKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentationCreationDate {
            get {
                return this.PresentationCreationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationCreationDateField, value) != true)) {
                    this.PresentationCreationDateField = value;
                    this.RaisePropertyChanged("PresentationCreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PresentationCreationTime {
            get {
                return this.PresentationCreationTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PresentationCreationTimeField, value) != true)) {
                    this.PresentationCreationTimeField = value;
                    this.RaisePropertyChanged("PresentationCreationTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GSPSDataItem", Namespace="http://schemas.datacontract.org/2004/07/ProRadServiceLib")]
    [System.SerializableAttribute()]
    public partial class GSPSDataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RotateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VoiLutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayArea {
            get {
                return this.DisplayAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayAreaField, value) != true)) {
                    this.DisplayAreaField = value;
                    this.RaisePropertyChanged("DisplayArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flip {
            get {
                return this.FlipField;
            }
            set {
                if ((object.ReferenceEquals(this.FlipField, value) != true)) {
                    this.FlipField = value;
                    this.RaisePropertyChanged("Flip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rotate {
            get {
                return this.RotateField;
            }
            set {
                if ((object.ReferenceEquals(this.RotateField, value) != true)) {
                    this.RotateField = value;
                    this.RaisePropertyChanged("Rotate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoiLut {
            get {
                return this.VoiLutField;
            }
            set {
                if ((object.ReferenceEquals(this.VoiLutField, value) != true)) {
                    this.VoiLutField = value;
                    this.RaisePropertyChanged("VoiLut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProRadService.ProRadServices")]
    public interface ProRadServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/Login", ReplyAction="http://tempuri.org/ProRadServices/LoginResponse")]
        int Login(out string SID, string LoginID, string Password, string flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/Login2", ReplyAction="http://tempuri.org/ProRadServices/Login2Response")]
        int Login2(out string SID, out string UserID, out int IsAdmin, string LoginID, string Password, string flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/LoginUrl", ReplyAction="http://tempuri.org/ProRadServices/LoginUrlResponse")]
        int LoginUrl(out string SID, string LoginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetUserConfig", ReplyAction="http://tempuri.org/ProRadServices/GetUserConfigResponse")]
        int GetUserConfig(out System.Collections.Generic.Dictionary<string, string> items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetModalityConfig", ReplyAction="http://tempuri.org/ProRadServices/GetModalityConfigResponse")]
        int GetModalityConfig(out System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>> items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetAnnotationList", ReplyAction="http://tempuri.org/ProRadServices/GetAnnotationListResponse")]
        int GetAnnotationList(out ProRadWebViewer.ProRadService.AnnotationItem[] items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetUserConfig", ReplyAction="http://tempuri.org/ProRadServices/SetUserConfigResponse")]
        int SetUserConfig(string SID, System.Collections.Generic.Dictionary<string, string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetUserPassword", ReplyAction="http://tempuri.org/ProRadServices/SetUserPasswordResponse")]
        int SetUserPassword(string SID, string Password, string NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/CheckLoginID", ReplyAction="http://tempuri.org/ProRadServices/CheckLoginIDResponse")]
        int CheckLoginID(out bool used, string SID, string LoginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetSaiban", ReplyAction="http://tempuri.org/ProRadServices/GetSaibanResponse")]
        int GetSaiban(out string item, string SID, string SaibanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMServerConfig", ReplyAction="http://tempuri.org/ProRadServices/GetMServerConfigResponse")]
        int GetMServerConfig(out System.Collections.Generic.Dictionary<string, System.Tuple<string, string>> items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMServerConfig", ReplyAction="http://tempuri.org/ProRadServices/SetMServerConfigResponse")]
        int SetMServerConfig(string SID, System.Collections.Generic.Dictionary<string, string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMSystemConfig", ReplyAction="http://tempuri.org/ProRadServices/GetMSystemConfigResponse")]
        int GetMSystemConfig(out System.Collections.Generic.Dictionary<string, System.Tuple<string, string>> items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMSystemConfig", ReplyAction="http://tempuri.org/ProRadServices/SetMSystemConfigResponse")]
        int SetMSystemConfig(string SID, System.Collections.Generic.Dictionary<string, string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMGroup", ReplyAction="http://tempuri.org/ProRadServices/GetMGroupResponse")]
        int GetMGroup(out ProRadWebViewer.ProRadService.MGroupItem[] items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMGroup", ReplyAction="http://tempuri.org/ProRadServices/SetMGroupResponse")]
        int SetMGroup(string SID, ProRadWebViewer.ProRadService.MGroupItem item, ProRadWebViewer.ProRadService.DbActionType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMGroupConfig", ReplyAction="http://tempuri.org/ProRadServices/GetMGroupConfigResponse")]
        int GetMGroupConfig(out System.Collections.Generic.Dictionary<string, string> items, string SID, string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMGroupConfig", ReplyAction="http://tempuri.org/ProRadServices/SetMGroupConfigResponse")]
        int SetMGroupConfig(string SID, string GroupID, System.Collections.Generic.Dictionary<string, string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMUser", ReplyAction="http://tempuri.org/ProRadServices/GetMUserResponse")]
        int GetMUser(out ProRadWebViewer.ProRadService.MUserItem[] items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMUser", ReplyAction="http://tempuri.org/ProRadServices/SetMUserResponse")]
        int SetMUser(string SID, ProRadWebViewer.ProRadService.MUserItem item, ProRadWebViewer.ProRadService.DbActionType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMUserConfig", ReplyAction="http://tempuri.org/ProRadServices/GetMUserConfigResponse")]
        int GetMUserConfig(out System.Collections.Generic.Dictionary<string, string> items, string SID, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMUserConfig", ReplyAction="http://tempuri.org/ProRadServices/SetMUserConfigResponse")]
        int SetMUserConfig(string SID, string UserID, System.Collections.Generic.Dictionary<string, string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMStorage", ReplyAction="http://tempuri.org/ProRadServices/GetMStorageResponse")]
        int GetMStorage(out ProRadWebViewer.ProRadService.MStorageItem[] items, string SID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMStorage", ReplyAction="http://tempuri.org/ProRadServices/SetMStorageResponse")]
        int SetMStorage(string SID, ProRadWebViewer.ProRadService.MStorageItem item, ProRadWebViewer.ProRadService.DbActionType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMModalityConfig_Modality", ReplyAction="http://tempuri.org/ProRadServices/GetMModalityConfig_ModalityResponse")]
        int GetMModalityConfig_Modality(out string[] items, string SID, string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMModalityConfig", ReplyAction="http://tempuri.org/ProRadServices/GetMModalityConfigResponse")]
        int GetMModalityConfig(out System.Collections.Generic.Dictionary<string, System.Tuple<string, string>> items, string SID, string GroupID, string Modality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMModalityConfig", ReplyAction="http://tempuri.org/ProRadServices/SetMModalityConfigResponse")]
        int SetMModalityConfig(string SID, string GroupID, string Modality, System.Collections.Generic.Dictionary<string, string> items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMAnnotation_Modality", ReplyAction="http://tempuri.org/ProRadServices/GetMAnnotation_ModalityResponse")]
        int GetMAnnotation_Modality(out string[] items, string SID, string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetMAnnotation", ReplyAction="http://tempuri.org/ProRadServices/GetMAnnotationResponse")]
        int GetMAnnotation(out ProRadWebViewer.ProRadService.AnnotationItem[] items, string SID, string GroupID, string Modality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetMAnnotation", ReplyAction="http://tempuri.org/ProRadServices/SetMAnnotationResponse")]
        int SetMAnnotation(string SID, string GroupID, string Modality, ProRadWebViewer.ProRadService.AnnotationItem[] items);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/ToRSKeyString", ReplyAction="http://tempuri.org/ProRadServices/ToRSKeyStringResponse")]
        int ToRSKeyString(out string rskeyString, string SID, ProRadWebViewer.ProRadService.RSKey rskey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/RSKey2StudyKey", ReplyAction="http://tempuri.org/ProRadServices/RSKey2StudyKeyResponse")]
        int RSKey2StudyKey(out string patid, out string studykey, out string path, out ProRadWebViewer.ProRadService.FindParam prm, string SID, string rskey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetStudyList", ReplyAction="http://tempuri.org/ProRadServices/GetStudyListResponse")]
        int GetStudyList(out ProRadWebViewer.ProRadService.StudyTag[] tags, out int count, string SID, ProRadWebViewer.ProRadService.FindParam prm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetStudyList_Kako", ReplyAction="http://tempuri.org/ProRadServices/GetStudyList_KakoResponse")]
        int GetStudyList_Kako(out ProRadWebViewer.ProRadService.StudyTag[] tags, string SID, string patientid, string studykey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetStudyKey", ReplyAction="http://tempuri.org/ProRadServices/GetStudyKeyResponse")]
        int GetStudyKey(out string patientid, out string studykey, string SID, ProRadWebViewer.ProRadService.FindParam prm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetSeriesList", ReplyAction="http://tempuri.org/ProRadServices/GetSeriesListResponse")]
        int GetSeriesList(out ProRadWebViewer.ProRadService.SeriesTag[] tags, string SID, string studykey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetImageList", ReplyAction="http://tempuri.org/ProRadServices/GetImageListResponse")]
        int GetImageList(out ProRadWebViewer.ProRadService.ImageTag[] imTags, out ProRadWebViewer.ProRadService.SeriesTag[] seTags, string SID, string serieskey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetImageList2", ReplyAction="http://tempuri.org/ProRadServices/GetImageList2Response")]
        int GetImageList2(out ProRadWebViewer.ProRadService.ImageTag[] tags, string SID, string[] imagekeys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/DelStudy", ReplyAction="http://tempuri.org/ProRadServices/DelStudyResponse")]
        int DelStudy(string SID, string studykey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetStudyMemo", ReplyAction="http://tempuri.org/ProRadServices/GetStudyMemoResponse")]
        int GetStudyMemo(out ProRadWebViewer.ProRadService.StudyMemoItem item, out int count, string SID, string studykey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetStudyMemoHistory", ReplyAction="http://tempuri.org/ProRadServices/GetStudyMemoHistoryResponse")]
        int GetStudyMemoHistory(out ProRadWebViewer.ProRadService.StudyMemoItem[] items, string SID, string studykey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetStudyMemo", ReplyAction="http://tempuri.org/ProRadServices/SetStudyMemoResponse")]
        int SetStudyMemo(string SID, string studykey, ProRadWebViewer.ProRadService.StudyMemoItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetComment", ReplyAction="http://tempuri.org/ProRadServices/SetCommentResponse")]
        int SetComment(string SID, string studykey, string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/SetKeyword", ReplyAction="http://tempuri.org/ProRadServices/SetKeywordResponse")]
        int SetKeyword(string SID, string studykey, string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetThumbnail", ReplyAction="http://tempuri.org/ProRadServices/GetThumbnailResponse")]
        int GetThumbnail(out byte[] thumb, string SID, string serieskey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetThumbnail2", ReplyAction="http://tempuri.org/ProRadServices/GetThumbnail2Response")]
        int GetThumbnail2(out byte[] thumb, string SID, string imagekey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetImage", ReplyAction="http://tempuri.org/ProRadServices/GetImageResponse")]
        int GetImage(out byte[] image, string SID, string imagekey, int level, int cx, int cy, int cw, int ch, double wc, double ww, int rot, int flipX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetImage2", ReplyAction="http://tempuri.org/ProRadServices/GetImage2Response")]
        int GetImage2(out byte[] image, string SID, string imagekey, int level, int cx, int cy, int cw, int ch, double wc, double ww, int rot, int flipX, bool preview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetDicomTag", ReplyAction="http://tempuri.org/ProRadServices/GetDicomTagResponse")]
        int GetDicomTag(out ProRadWebViewer.ProRadService.DicomTagItem[] items, string SID, string imagekey, uint[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetDicomTagAll", ReplyAction="http://tempuri.org/ProRadServices/GetDicomTagAllResponse")]
        int GetDicomTagAll(out ProRadWebViewer.ProRadService.DicomTagItem[] items, string SID, string imagekey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetRoi", ReplyAction="http://tempuri.org/ProRadServices/GetRoiResponse")]
        int GetRoi(out ProRadWebViewer.ProRadService.RoiItem roi, string SID, string imagekey, System.Drawing.Point p1, System.Drawing.Point p2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/PutImage", ReplyAction="http://tempuri.org/ProRadServices/PutImageResponse")]
        int PutImage(string SID, string[] trace, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/PrefetchImageList", ReplyAction="http://tempuri.org/ProRadServices/PrefetchImageListResponse")]
        int PrefetchImageList(out string[] keys, string SID, string serieskey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/PrefetchImage", ReplyAction="http://tempuri.org/ProRadServices/PrefetchImageResponse")]
        int PrefetchImage(string SID, string imagekey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetImageInfo", ReplyAction="http://tempuri.org/ProRadServices/GetImageInfoResponse")]
        int GetImageInfo(out ProRadWebViewer.ProRadService.ImageTag tag, string SID, string imagekey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetGspsList", ReplyAction="http://tempuri.org/ProRadServices/GetGspsListResponse")]
        int GetGspsList(out ProRadWebViewer.ProRadService.GSPSItem[] items, string SID, string serieskey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProRadServices/GetGsps", ReplyAction="http://tempuri.org/ProRadServices/GetGspsResponse")]
        int GetGsps(out System.Collections.Generic.Dictionary<string, ProRadWebViewer.ProRadService.GSPSDataItem> items, string SID, string gspskey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProRadServicesChannel : ProRadWebViewer.ProRadService.ProRadServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProRadServicesClient : System.ServiceModel.ClientBase<ProRadWebViewer.ProRadService.ProRadServices>, ProRadWebViewer.ProRadService.ProRadServices {
        
        public ProRadServicesClient() {
        }
        
        public ProRadServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProRadServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProRadServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProRadServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Login(out string SID, string LoginID, string Password, string flag) {
            return base.Channel.Login(out SID, LoginID, Password, flag);
        }
        
        public int Login2(out string SID, out string UserID, out int IsAdmin, string LoginID, string Password, string flag) {
            return base.Channel.Login2(out SID, out UserID, out IsAdmin, LoginID, Password, flag);
        }
        
        public int LoginUrl(out string SID, string LoginID) {
            return base.Channel.LoginUrl(out SID, LoginID);
        }
        
        public int GetUserConfig(out System.Collections.Generic.Dictionary<string, string> items, string SID) {
            return base.Channel.GetUserConfig(out items, SID);
        }
        
        public int GetModalityConfig(out System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>> items, string SID) {
            return base.Channel.GetModalityConfig(out items, SID);
        }
        
        public int GetAnnotationList(out ProRadWebViewer.ProRadService.AnnotationItem[] items, string SID) {
            return base.Channel.GetAnnotationList(out items, SID);
        }
        
        public int SetUserConfig(string SID, System.Collections.Generic.Dictionary<string, string> items) {
            return base.Channel.SetUserConfig(SID, items);
        }
        
        public int SetUserPassword(string SID, string Password, string NewPassword) {
            return base.Channel.SetUserPassword(SID, Password, NewPassword);
        }
        
        public int CheckLoginID(out bool used, string SID, string LoginID) {
            return base.Channel.CheckLoginID(out used, SID, LoginID);
        }
        
        public int GetSaiban(out string item, string SID, string SaibanID) {
            return base.Channel.GetSaiban(out item, SID, SaibanID);
        }
        
        public int GetMServerConfig(out System.Collections.Generic.Dictionary<string, System.Tuple<string, string>> items, string SID) {
            return base.Channel.GetMServerConfig(out items, SID);
        }
        
        public int SetMServerConfig(string SID, System.Collections.Generic.Dictionary<string, string> items) {
            return base.Channel.SetMServerConfig(SID, items);
        }
        
        public int GetMSystemConfig(out System.Collections.Generic.Dictionary<string, System.Tuple<string, string>> items, string SID) {
            return base.Channel.GetMSystemConfig(out items, SID);
        }
        
        public int SetMSystemConfig(string SID, System.Collections.Generic.Dictionary<string, string> items) {
            return base.Channel.SetMSystemConfig(SID, items);
        }
        
        public int GetMGroup(out ProRadWebViewer.ProRadService.MGroupItem[] items, string SID) {
            return base.Channel.GetMGroup(out items, SID);
        }
        
        public int SetMGroup(string SID, ProRadWebViewer.ProRadService.MGroupItem item, ProRadWebViewer.ProRadService.DbActionType type) {
            return base.Channel.SetMGroup(SID, item, type);
        }
        
        public int GetMGroupConfig(out System.Collections.Generic.Dictionary<string, string> items, string SID, string GroupID) {
            return base.Channel.GetMGroupConfig(out items, SID, GroupID);
        }
        
        public int SetMGroupConfig(string SID, string GroupID, System.Collections.Generic.Dictionary<string, string> items) {
            return base.Channel.SetMGroupConfig(SID, GroupID, items);
        }
        
        public int GetMUser(out ProRadWebViewer.ProRadService.MUserItem[] items, string SID) {
            return base.Channel.GetMUser(out items, SID);
        }
        
        public int SetMUser(string SID, ProRadWebViewer.ProRadService.MUserItem item, ProRadWebViewer.ProRadService.DbActionType type) {
            return base.Channel.SetMUser(SID, item, type);
        }
        
        public int GetMUserConfig(out System.Collections.Generic.Dictionary<string, string> items, string SID, string UserID) {
            return base.Channel.GetMUserConfig(out items, SID, UserID);
        }
        
        public int SetMUserConfig(string SID, string UserID, System.Collections.Generic.Dictionary<string, string> items) {
            return base.Channel.SetMUserConfig(SID, UserID, items);
        }
        
        public int GetMStorage(out ProRadWebViewer.ProRadService.MStorageItem[] items, string SID) {
            return base.Channel.GetMStorage(out items, SID);
        }
        
        public int SetMStorage(string SID, ProRadWebViewer.ProRadService.MStorageItem item, ProRadWebViewer.ProRadService.DbActionType type) {
            return base.Channel.SetMStorage(SID, item, type);
        }
        
        public int GetMModalityConfig_Modality(out string[] items, string SID, string GroupID) {
            return base.Channel.GetMModalityConfig_Modality(out items, SID, GroupID);
        }
        
        public int GetMModalityConfig(out System.Collections.Generic.Dictionary<string, System.Tuple<string, string>> items, string SID, string GroupID, string Modality) {
            return base.Channel.GetMModalityConfig(out items, SID, GroupID, Modality);
        }
        
        public int SetMModalityConfig(string SID, string GroupID, string Modality, System.Collections.Generic.Dictionary<string, string> items) {
            return base.Channel.SetMModalityConfig(SID, GroupID, Modality, items);
        }
        
        public int GetMAnnotation_Modality(out string[] items, string SID, string GroupID) {
            return base.Channel.GetMAnnotation_Modality(out items, SID, GroupID);
        }
        
        public int GetMAnnotation(out ProRadWebViewer.ProRadService.AnnotationItem[] items, string SID, string GroupID, string Modality) {
            return base.Channel.GetMAnnotation(out items, SID, GroupID, Modality);
        }
        
        public int SetMAnnotation(string SID, string GroupID, string Modality, ProRadWebViewer.ProRadService.AnnotationItem[] items) {
            return base.Channel.SetMAnnotation(SID, GroupID, Modality, items);
        }
        
        public int ToRSKeyString(out string rskeyString, string SID, ProRadWebViewer.ProRadService.RSKey rskey) {
            return base.Channel.ToRSKeyString(out rskeyString, SID, rskey);
        }
        
        public int RSKey2StudyKey(out string patid, out string studykey, out string path, out ProRadWebViewer.ProRadService.FindParam prm, string SID, string rskey) {
            return base.Channel.RSKey2StudyKey(out patid, out studykey, out path, out prm, SID, rskey);
        }
        
        public int GetStudyList(out ProRadWebViewer.ProRadService.StudyTag[] tags, out int count, string SID, ProRadWebViewer.ProRadService.FindParam prm) {
            return base.Channel.GetStudyList(out tags, out count, SID, prm);
        }
        
        public int GetStudyList_Kako(out ProRadWebViewer.ProRadService.StudyTag[] tags, string SID, string patientid, string studykey) {
            return base.Channel.GetStudyList_Kako(out tags, SID, patientid, studykey);
        }
        
        public int GetStudyKey(out string patientid, out string studykey, string SID, ProRadWebViewer.ProRadService.FindParam prm) {
            return base.Channel.GetStudyKey(out patientid, out studykey, SID, prm);
        }
        
        public int GetSeriesList(out ProRadWebViewer.ProRadService.SeriesTag[] tags, string SID, string studykey) {
            return base.Channel.GetSeriesList(out tags, SID, studykey);
        }
        
        public int GetImageList(out ProRadWebViewer.ProRadService.ImageTag[] imTags, out ProRadWebViewer.ProRadService.SeriesTag[] seTags, string SID, string serieskey) {
            return base.Channel.GetImageList(out imTags, out seTags, SID, serieskey);
        }
        
        public int GetImageList2(out ProRadWebViewer.ProRadService.ImageTag[] tags, string SID, string[] imagekeys) {
            return base.Channel.GetImageList2(out tags, SID, imagekeys);
        }
        
        public int DelStudy(string SID, string studykey) {
            return base.Channel.DelStudy(SID, studykey);
        }
        
        public int GetStudyMemo(out ProRadWebViewer.ProRadService.StudyMemoItem item, out int count, string SID, string studykey) {
            return base.Channel.GetStudyMemo(out item, out count, SID, studykey);
        }
        
        public int GetStudyMemoHistory(out ProRadWebViewer.ProRadService.StudyMemoItem[] items, string SID, string studykey) {
            return base.Channel.GetStudyMemoHistory(out items, SID, studykey);
        }
        
        public int SetStudyMemo(string SID, string studykey, ProRadWebViewer.ProRadService.StudyMemoItem item) {
            return base.Channel.SetStudyMemo(SID, studykey, item);
        }
        
        public int SetComment(string SID, string studykey, string item) {
            return base.Channel.SetComment(SID, studykey, item);
        }
        
        public int SetKeyword(string SID, string studykey, string item) {
            return base.Channel.SetKeyword(SID, studykey, item);
        }
        
        public int GetThumbnail(out byte[] thumb, string SID, string serieskey) {
            return base.Channel.GetThumbnail(out thumb, SID, serieskey);
        }
        
        public int GetThumbnail2(out byte[] thumb, string SID, string imagekey) {
            return base.Channel.GetThumbnail2(out thumb, SID, imagekey);
        }
        
        public int GetImage(out byte[] image, string SID, string imagekey, int level, int cx, int cy, int cw, int ch, double wc, double ww, int rot, int flipX) {
            return base.Channel.GetImage(out image, SID, imagekey, level, cx, cy, cw, ch, wc, ww, rot, flipX);
        }
        
        public int GetImage2(out byte[] image, string SID, string imagekey, int level, int cx, int cy, int cw, int ch, double wc, double ww, int rot, int flipX, bool preview) {
            return base.Channel.GetImage2(out image, SID, imagekey, level, cx, cy, cw, ch, wc, ww, rot, flipX, preview);
        }
        
        public int GetDicomTag(out ProRadWebViewer.ProRadService.DicomTagItem[] items, string SID, string imagekey, uint[] tags) {
            return base.Channel.GetDicomTag(out items, SID, imagekey, tags);
        }
        
        public int GetDicomTagAll(out ProRadWebViewer.ProRadService.DicomTagItem[] items, string SID, string imagekey) {
            return base.Channel.GetDicomTagAll(out items, SID, imagekey);
        }
        
        public int GetRoi(out ProRadWebViewer.ProRadService.RoiItem roi, string SID, string imagekey, System.Drawing.Point p1, System.Drawing.Point p2) {
            return base.Channel.GetRoi(out roi, SID, imagekey, p1, p2);
        }
        
        public int PutImage(string SID, string[] trace, string path) {
            return base.Channel.PutImage(SID, trace, path);
        }
        
        public int PrefetchImageList(out string[] keys, string SID, string serieskey) {
            return base.Channel.PrefetchImageList(out keys, SID, serieskey);
        }
        
        public int PrefetchImage(string SID, string imagekey) {
            return base.Channel.PrefetchImage(SID, imagekey);
        }
        
        public int GetImageInfo(out ProRadWebViewer.ProRadService.ImageTag tag, string SID, string imagekey) {
            return base.Channel.GetImageInfo(out tag, SID, imagekey);
        }
        
        public int GetGspsList(out ProRadWebViewer.ProRadService.GSPSItem[] items, string SID, string serieskey) {
            return base.Channel.GetGspsList(out items, SID, serieskey);
        }
        
        public int GetGsps(out System.Collections.Generic.Dictionary<string, ProRadWebViewer.ProRadService.GSPSDataItem> items, string SID, string gspskey) {
            return base.Channel.GetGsps(out items, SID, gspskey);
        }
    }
}
